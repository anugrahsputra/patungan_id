// Mocks generated by Mockito 5.4.3 from annotations
// in patungan_id/test/helper/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:io' as _i16;
import 'dart:typed_data' as _i15;

import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart'
    as _i5;
import 'package:dartz/dartz.dart' as _i11;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i3;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:firebase_storage/firebase_storage.dart' as _i8;
import 'package:firebase_storage_platform_interface/firebase_storage_platform_interface.dart'
    as _i9;
import 'package:flutter/material.dart' as _i18;
import 'package:image_picker/image_picker.dart' as _i20;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:patungan_id/app/core/core.dart' as _i17;
import 'package:patungan_id/app/data/data.dart' as _i19;
import 'package:patungan_id/app/data/models/models.dart' as _i10;
import 'package:patungan_id/app/domain/domain.dart' as _i12;
import 'package:shared_preferences/shared_preferences.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_1 extends _i1.SmartFake
    implements _i3.ActionCodeInfo {
  _FakeActionCodeInfo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_2 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_3 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettings_4 extends _i1.SmartFake implements _i5.Settings {
  _FakeSettings_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_5<T extends Object?> extends _i1.SmartFake
    implements _i6.CollectionReference<T> {
  _FakeCollectionReference_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWriteBatch_6 extends _i1.SmartFake implements _i6.WriteBatch {
  _FakeWriteBatch_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoadBundleTask_7 extends _i1.SmartFake
    implements _i6.LoadBundleTask {
  _FakeLoadBundleTask_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_8<T1 extends Object?> extends _i1.SmartFake
    implements _i6.QuerySnapshot<T1> {
  _FakeQuerySnapshot_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuery_9<T extends Object?> extends _i1.SmartFake
    implements _i6.Query<T> {
  _FakeQuery_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentReference_10<T extends Object?> extends _i1.SmartFake
    implements _i6.DocumentReference<T> {
  _FakeDocumentReference_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_11<T1> extends _i1.SmartFake implements _i7.Future<T1> {
  _FakeFuture_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_12 extends _i1.SmartFake implements Duration {
  _FakeDuration_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReference_13 extends _i1.SmartFake implements _i8.Reference {
  _FakeReference_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_14 extends _i1.SmartFake implements _i3.UserMetadata {
  _FakeUserMetadata_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_15 extends _i1.SmartFake implements _i4.MultiFactor {
  _FakeMultiFactor_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_16 extends _i1.SmartFake implements _i3.IdTokenResult {
  _FakeIdTokenResult_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_17 extends _i1.SmartFake implements _i4.User {
  _FakeUser_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnapshotMetadata_18 extends _i1.SmartFake
    implements _i6.SnapshotMetadata {
  _FakeSnapshotMetadata_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_19 extends _i1.SmartFake
    implements _i6.FirebaseFirestore {
  _FakeFirebaseFirestore_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_20<T1 extends Object?> extends _i1.SmartFake
    implements _i6.DocumentSnapshot<T1> {
  _FakeDocumentSnapshot_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAggregateQuery_21 extends _i1.SmartFake
    implements _i6.AggregateQuery {
  _FakeAggregateQuery_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseStorage_22 extends _i1.SmartFake
    implements _i8.FirebaseStorage {
  _FakeFirebaseStorage_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFullMetadata_23 extends _i1.SmartFake implements _i9.FullMetadata {
  _FakeFullMetadata_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListResult_24 extends _i1.SmartFake implements _i8.ListResult {
  _FakeListResult_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUploadTask_25 extends _i1.SmartFake implements _i8.UploadTask {
  _FakeUploadTask_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDownloadTask_26 extends _i1.SmartFake implements _i8.DownloadTask {
  _FakeDownloadTask_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_27 extends _i1.SmartFake implements _i10.UserModel {
  _FakeUserModel_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_28<L, R> extends _i1.SmartFake implements _i11.Either<L, R> {
  _FakeEither_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthRepository_29 extends _i1.SmartFake
    implements _i12.AuthRepository {
  _FakeAuthRepository_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserRepository_30 extends _i1.SmartFake
    implements _i12.UserRepository {
  _FakeUserRepository_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettingRepository_31 extends _i1.SmartFake
    implements _i12.SettingRepository {
  _FakeSettingRepository_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStorageRepository_32 extends _i1.SmartFake
    implements _i12.StorageRepository {
  _FakeStorageRepository_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i13.SharedPreferences {
  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as List<String>?);

  @override
  _i7.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i4.FirebaseAuth {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i3.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i7.Future<_i3.ActionCodeInfo>.value(_FakeActionCodeInfo_1(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.ActionCodeInfo>.value(_FakeActionCodeInfo_1(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i7.Future<_i3.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i7.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i7.Future<List<String>>.value(<String>[]),
      ) as _i7.Future<List<String>>);

  @override
  _i7.Future<_i4.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<_i4.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i3.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCredential(
          _i3.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithAuthProvider(
          _i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithProvider(
          _i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> signInWithPopup(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i3.PhoneMultiFactorInfo? multiFactorInfo,
    required _i3.PhoneVerificationCompleted? verificationCompleted,
    required _i3.PhoneVerificationFailed? verificationFailed,
    required _i3.PhoneCodeSent? codeSent,
    required _i3.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i3.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i6.FirebaseFirestore {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseURL => (super.noSuchMethod(
        Invocation.getter(#databaseURL),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
      ) as String);

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
        Invocation.setter(
          #databaseURL,
          _databaseURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set settings(_i5.Settings? settings) => super.noSuchMethod(
        Invocation.setter(
          #settings,
          settings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Settings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettings_4(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeSettings_4(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i5.Settings);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i6.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i6.CollectionReference<Map<String, dynamic>>);

  @override
  _i6.WriteBatch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeWriteBatch_6(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeWriteBatch_6(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i6.WriteBatch);

  @override
  _i7.Future<void> clearPersistence() => (super.noSuchMethod(
        Invocation.method(
          #clearPersistence,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> enablePersistence(
          [_i5.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #enablePersistence,
          [persistenceSettings],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.LoadBundleTask loadBundle(_i15.Uint8List? bundle) => (super.noSuchMethod(
        Invocation.method(
          #loadBundle,
          [bundle],
        ),
        returnValue: _FakeLoadBundleTask_7(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
        returnValueForMissingStub: _FakeLoadBundleTask_7(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
      ) as _i6.LoadBundleTask);

  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #useFirestoreEmulator,
          [
            host,
            port,
          ],
          {#sslEnabled: sslEnabled},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i6.QuerySnapshot<T>> namedQueryWithConverterGet<T>(
    String? name, {
    _i5.GetOptions? options = const _i5.GetOptions(),
    required _i6.FromFirestore<T>? fromFirestore,
    required _i6.ToFirestore<T>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryWithConverterGet,
          [name],
          {
            #options: options,
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_8<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_8<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
      ) as _i7.Future<_i6.QuerySnapshot<T>>);

  @override
  _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i5.GetOptions? options = const _i5.GetOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryGet,
          [name],
          {#options: options},
        ),
        returnValue: _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_8<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_8<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
      ) as _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i6.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectionGroup,
          [collectionPath],
        ),
        returnValue: _FakeQuery_9<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
      ) as _i6.Query<Map<String, dynamic>>);

  @override
  _i7.Future<void> disableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #disableNetwork,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #doc,
          [documentPath],
        ),
        returnValue: _FakeDocumentReference_10<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_10<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
      ) as _i6.DocumentReference<Map<String, dynamic>>);

  @override
  _i7.Future<void> enableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #enableNetwork,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<void> snapshotsInSync() => (super.noSuchMethod(
        Invocation.method(
          #snapshotsInSync,
          [],
        ),
        returnValue: _i7.Stream<void>.empty(),
        returnValueForMissingStub: _i7.Stream<void>.empty(),
      ) as _i7.Stream<void>);

  @override
  _i7.Future<T> runTransaction<T>(
    _i6.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTransaction,
          [transactionHandler],
          {
            #timeout: timeout,
            #maxAttempts: maxAttempts,
          },
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
        returnValueForMissingStub: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i7.Future<void> terminate() => (super.noSuchMethod(
        Invocation.method(
          #terminate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> waitForPendingWrites() => (super.noSuchMethod(
        Invocation.method(
          #waitForPendingWrites,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setIndexConfiguration({
    required List<_i5.Index>? indexes,
    List<_i5.FieldOverrides>? fieldOverrides,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfiguration,
          [],
          {
            #indexes: indexes,
            #fieldOverrides: fieldOverrides,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setIndexConfigurationFromJSON(String? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfigurationFromJSON,
          [json],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [FirebaseStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseStorage extends _i1.Mock implements _i8.FirebaseStorage {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get bucket => (super.noSuchMethod(
        Invocation.getter(#bucket),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#bucket),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#bucket),
        ),
      ) as String);

  @override
  set bucket(String? _bucket) => super.noSuchMethod(
        Invocation.setter(
          #bucket,
          _bucket,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get maxOperationRetryTime => (super.noSuchMethod(
        Invocation.getter(#maxOperationRetryTime),
        returnValue: _FakeDuration_12(
          this,
          Invocation.getter(#maxOperationRetryTime),
        ),
        returnValueForMissingStub: _FakeDuration_12(
          this,
          Invocation.getter(#maxOperationRetryTime),
        ),
      ) as Duration);

  @override
  Duration get maxUploadRetryTime => (super.noSuchMethod(
        Invocation.getter(#maxUploadRetryTime),
        returnValue: _FakeDuration_12(
          this,
          Invocation.getter(#maxUploadRetryTime),
        ),
        returnValueForMissingStub: _FakeDuration_12(
          this,
          Invocation.getter(#maxUploadRetryTime),
        ),
      ) as Duration);

  @override
  Duration get maxDownloadRetryTime => (super.noSuchMethod(
        Invocation.getter(#maxDownloadRetryTime),
        returnValue: _FakeDuration_12(
          this,
          Invocation.getter(#maxDownloadRetryTime),
        ),
        returnValueForMissingStub: _FakeDuration_12(
          this,
          Invocation.getter(#maxDownloadRetryTime),
        ),
      ) as Duration);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i8.Reference ref([String? path]) => (super.noSuchMethod(
        Invocation.method(
          #ref,
          [path],
        ),
        returnValue: _FakeReference_13(
          this,
          Invocation.method(
            #ref,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeReference_13(
          this,
          Invocation.method(
            #ref,
            [path],
          ),
        ),
      ) as _i8.Reference);

  @override
  _i8.Reference refFromURL(String? url) => (super.noSuchMethod(
        Invocation.method(
          #refFromURL,
          [url],
        ),
        returnValue: _FakeReference_13(
          this,
          Invocation.method(
            #refFromURL,
            [url],
          ),
        ),
        returnValueForMissingStub: _FakeReference_13(
          this,
          Invocation.method(
            #refFromURL,
            [url],
          ),
        ),
      ) as _i8.Reference);

  @override
  void setMaxOperationRetryTime(Duration? time) => super.noSuchMethod(
        Invocation.method(
          #setMaxOperationRetryTime,
          [time],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMaxUploadRetryTime(Duration? time) => super.noSuchMethod(
        Invocation.method(
          #setMaxUploadRetryTime,
          [time],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMaxDownloadRetryTime(Duration? time) => super.noSuchMethod(
        Invocation.method(
          #setMaxDownloadRetryTime,
          [time],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> useEmulator({
    required String? host,
    required int? port,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [],
          {
            #host: host,
            #port: port,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> useStorageEmulator(
    String? host,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #useStorageEmulator,
          [
            host,
            port,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i4.User {
  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i3.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_14(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeUserMetadata_14(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i3.UserMetadata);

  @override
  List<_i3.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i3.UserInfo>[],
        returnValueForMissingStub: <_i3.UserInfo>[],
      ) as List<_i3.UserInfo>);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  _i4.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_15(
          this,
          Invocation.getter(#multiFactor),
        ),
        returnValueForMissingStub: _FakeMultiFactor_15(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i4.MultiFactor);

  @override
  _i7.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<_i3.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i7.Future<_i3.IdTokenResult>.value(_FakeIdTokenResult_16(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.IdTokenResult>.value(_FakeIdTokenResult_16(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i7.Future<_i3.IdTokenResult>);

  @override
  _i7.Future<_i4.UserCredential> linkWithCredential(
          _i3.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> linkWithProvider(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithProvider(
          _i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithPopup(
          _i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> reauthenticateWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> linkWithPopup(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> linkWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithCredential(
          _i3.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendEmailVerification(
          [_i3.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i7.Future<_i4.User>.value(_FakeUser_17(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i4.User>.value(_FakeUser_17(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i7.Future<_i4.User>);

  @override
  _i7.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhoneNumber(
          _i3.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i3.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [DocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentSnapshot<T extends Object?> extends _i1.Mock
    implements _i6.DocumentSnapshot<T> {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i6.DocumentReference<T> get reference => (super.noSuchMethod(
        Invocation.getter(#reference),
        returnValue: _FakeDocumentReference_10<T>(
          this,
          Invocation.getter(#reference),
        ),
        returnValueForMissingStub: _FakeDocumentReference_10<T>(
          this,
          Invocation.getter(#reference),
        ),
      ) as _i6.DocumentReference<T>);

  @override
  _i6.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_18(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeSnapshotMetadata_18(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i6.SnapshotMetadata);

  @override
  bool get exists => (super.noSuchMethod(
        Invocation.getter(#exists),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  dynamic get(Object? field) => super.noSuchMethod(
        Invocation.method(
          #get,
          [field],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic operator [](Object? field) => super.noSuchMethod(
        Invocation.method(
          #[],
          [field],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DocumentReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockDocumentReference<T extends Object?> extends _i1.Mock
    implements _i6.DocumentReference<T> {
  @override
  _i6.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_19(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_19(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i6.FirebaseFirestore);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i6.CollectionReference<T> get parent => (super.noSuchMethod(
        Invocation.getter(#parent),
        returnValue: _FakeCollectionReference_5<T>(
          this,
          Invocation.getter(#parent),
        ),
        returnValueForMissingStub: _FakeCollectionReference_5<T>(
          this,
          Invocation.getter(#parent),
        ),
      ) as _i6.CollectionReference<T>);

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  _i6.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i6.CollectionReference<Map<String, dynamic>>);

  @override
  _i7.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> update(Map<Object, Object?>? data) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [data],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i6.DocumentSnapshot<T>> get([_i5.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue: _i7.Future<_i6.DocumentSnapshot<T>>.value(
            _FakeDocumentSnapshot_20<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i6.DocumentSnapshot<T>>.value(
            _FakeDocumentSnapshot_20<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i7.Future<_i6.DocumentSnapshot<T>>);

  @override
  _i7.Stream<_i6.DocumentSnapshot<T>> snapshots(
          {bool? includeMetadataChanges = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {#includeMetadataChanges: includeMetadataChanges},
        ),
        returnValue: _i7.Stream<_i6.DocumentSnapshot<T>>.empty(),
        returnValueForMissingStub: _i7.Stream<_i6.DocumentSnapshot<T>>.empty(),
      ) as _i7.Stream<_i6.DocumentSnapshot<T>>);

  @override
  _i7.Future<void> set(
    T? data, [
    _i5.SetOptions? options,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            data,
            options,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.DocumentReference<R> withConverter<R>({
    required _i6.FromFirestore<R>? fromFirestore,
    required _i6.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeDocumentReference_10<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDocumentReference_10<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i6.DocumentReference<R>);
}

/// A class which mocks [PhoneAuthCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhoneAuthCredential extends _i1.Mock
    implements _i3.PhoneAuthCredential {
  @override
  String get providerId => (super.noSuchMethod(
        Invocation.getter(#providerId),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#providerId),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#providerId),
        ),
      ) as String);

  @override
  String get signInMethod => (super.noSuchMethod(
        Invocation.getter(#signInMethod),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#signInMethod),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#signInMethod),
        ),
      ) as String);

  @override
  Map<String, dynamic> asMap() => (super.noSuchMethod(
        Invocation.method(
          #asMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [CollectionReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockCollectionReference<T extends Object?> extends _i1.Mock
    implements _i6.CollectionReference<T> {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  _i6.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_19(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_19(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i6.FirebaseFirestore);

  @override
  Map<String, dynamic> get parameters => (super.noSuchMethod(
        Invocation.getter(#parameters),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i7.Future<_i6.DocumentReference<T>> add(T? data) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [data],
        ),
        returnValue: _i7.Future<_i6.DocumentReference<T>>.value(
            _FakeDocumentReference_10<T>(
          this,
          Invocation.method(
            #add,
            [data],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i6.DocumentReference<T>>.value(
            _FakeDocumentReference_10<T>(
          this,
          Invocation.method(
            #add,
            [data],
          ),
        )),
      ) as _i7.Future<_i6.DocumentReference<T>>);

  @override
  _i6.DocumentReference<T> doc([String? path]) => (super.noSuchMethod(
        Invocation.method(
          #doc,
          [path],
        ),
        returnValue: _FakeDocumentReference_10<T>(
          this,
          Invocation.method(
            #doc,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeDocumentReference_10<T>(
          this,
          Invocation.method(
            #doc,
            [path],
          ),
        ),
      ) as _i6.DocumentReference<T>);

  @override
  _i6.CollectionReference<R> withConverter<R extends Object?>({
    required _i6.FromFirestore<R>? fromFirestore,
    required _i6.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeCollectionReference_5<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeCollectionReference_5<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i6.CollectionReference<R>);

  @override
  _i6.Query<T> endAtDocument(_i6.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> endAt(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #endAt,
          [values],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> endBeforeDocument(
          _i6.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBeforeDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> endBefore(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #endBefore,
          [values],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i7.Future<_i6.QuerySnapshot<T>> get([_i5.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_8<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_8<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i7.Future<_i6.QuerySnapshot<T>>);

  @override
  _i6.Query<T> limit(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limit,
          [limit],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> limitToLast(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limitToLast,
          [limit],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i7.Stream<_i6.QuerySnapshot<T>> snapshots(
          {bool? includeMetadataChanges = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {#includeMetadataChanges: includeMetadataChanges},
        ),
        returnValue: _i7.Stream<_i6.QuerySnapshot<T>>.empty(),
        returnValueForMissingStub: _i7.Stream<_i6.QuerySnapshot<T>>.empty(),
      ) as _i7.Stream<_i6.QuerySnapshot<T>>);

  @override
  _i6.Query<T> orderBy(
    Object? field, {
    bool? descending = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #orderBy,
          [field],
          {#descending: descending},
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> startAfterDocument(
          _i6.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfterDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> startAfter(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #startAfter,
          [values],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> startAtDocument(
          _i6.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> startAt(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #startAt,
          [values],
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.Query<T> where(
    Object? field, {
    Object? isEqualTo,
    Object? isNotEqualTo,
    Object? isLessThan,
    Object? isLessThanOrEqualTo,
    Object? isGreaterThan,
    Object? isGreaterThanOrEqualTo,
    Object? arrayContains,
    Iterable<Object?>? arrayContainsAny,
    Iterable<Object?>? whereIn,
    Iterable<Object?>? whereNotIn,
    bool? isNull,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [field],
          {
            #isEqualTo: isEqualTo,
            #isNotEqualTo: isNotEqualTo,
            #isLessThan: isLessThan,
            #isLessThanOrEqualTo: isLessThanOrEqualTo,
            #isGreaterThan: isGreaterThan,
            #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
            #arrayContains: arrayContains,
            #arrayContainsAny: arrayContainsAny,
            #whereIn: whereIn,
            #whereNotIn: whereNotIn,
            #isNull: isNull,
          },
        ),
        returnValue: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<T>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
      ) as _i6.Query<T>);

  @override
  _i6.AggregateQuery count() => (super.noSuchMethod(
        Invocation.method(
          #count,
          [],
        ),
        returnValue: _FakeAggregateQuery_21(
          this,
          Invocation.method(
            #count,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAggregateQuery_21(
          this,
          Invocation.method(
            #count,
            [],
          ),
        ),
      ) as _i6.AggregateQuery);
}

/// A class which mocks [QuerySnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuerySnapshot<T extends Object?> extends _i1.Mock
    implements _i6.QuerySnapshot<T> {
  @override
  List<_i6.QueryDocumentSnapshot<T>> get docs => (super.noSuchMethod(
        Invocation.getter(#docs),
        returnValue: <_i6.QueryDocumentSnapshot<T>>[],
        returnValueForMissingStub: <_i6.QueryDocumentSnapshot<T>>[],
      ) as List<_i6.QueryDocumentSnapshot<T>>);

  @override
  List<_i6.DocumentChange<T>> get docChanges => (super.noSuchMethod(
        Invocation.getter(#docChanges),
        returnValue: <_i6.DocumentChange<T>>[],
        returnValueForMissingStub: <_i6.DocumentChange<T>>[],
      ) as List<_i6.DocumentChange<T>>);

  @override
  _i6.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_18(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeSnapshotMetadata_18(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i6.SnapshotMetadata);

  @override
  int get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
}

/// A class which mocks [Reference].
///
/// See the documentation for Mockito's code generation for more information.
class MockReference extends _i1.Mock implements _i8.Reference {
  @override
  _i8.FirebaseStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFirebaseStorage_22(
          this,
          Invocation.getter(#storage),
        ),
        returnValueForMissingStub: _FakeFirebaseStorage_22(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i8.FirebaseStorage);

  @override
  String get bucket => (super.noSuchMethod(
        Invocation.getter(#bucket),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#bucket),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#bucket),
        ),
      ) as String);

  @override
  String get fullPath => (super.noSuchMethod(
        Invocation.getter(#fullPath),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#fullPath),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#fullPath),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i8.Reference get root => (super.noSuchMethod(
        Invocation.getter(#root),
        returnValue: _FakeReference_13(
          this,
          Invocation.getter(#root),
        ),
        returnValueForMissingStub: _FakeReference_13(
          this,
          Invocation.getter(#root),
        ),
      ) as _i8.Reference);

  @override
  _i8.Reference child(String? path) => (super.noSuchMethod(
        Invocation.method(
          #child,
          [path],
        ),
        returnValue: _FakeReference_13(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeReference_13(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
      ) as _i8.Reference);

  @override
  _i7.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> getDownloadURL() => (super.noSuchMethod(
        Invocation.method(
          #getDownloadURL,
          [],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getDownloadURL,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getDownloadURL,
            [],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i9.FullMetadata> getMetadata() => (super.noSuchMethod(
        Invocation.method(
          #getMetadata,
          [],
        ),
        returnValue: _i7.Future<_i9.FullMetadata>.value(_FakeFullMetadata_23(
          this,
          Invocation.method(
            #getMetadata,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i9.FullMetadata>.value(_FakeFullMetadata_23(
          this,
          Invocation.method(
            #getMetadata,
            [],
          ),
        )),
      ) as _i7.Future<_i9.FullMetadata>);

  @override
  _i7.Future<_i8.ListResult> list([_i9.ListOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [options],
        ),
        returnValue: _i7.Future<_i8.ListResult>.value(_FakeListResult_24(
          this,
          Invocation.method(
            #list,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i8.ListResult>.value(_FakeListResult_24(
          this,
          Invocation.method(
            #list,
            [options],
          ),
        )),
      ) as _i7.Future<_i8.ListResult>);

  @override
  _i7.Future<_i8.ListResult> listAll() => (super.noSuchMethod(
        Invocation.method(
          #listAll,
          [],
        ),
        returnValue: _i7.Future<_i8.ListResult>.value(_FakeListResult_24(
          this,
          Invocation.method(
            #listAll,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i8.ListResult>.value(_FakeListResult_24(
          this,
          Invocation.method(
            #listAll,
            [],
          ),
        )),
      ) as _i7.Future<_i8.ListResult>);

  @override
  _i7.Future<_i15.Uint8List?> getData([int? maxSize = 10485760]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [maxSize],
        ),
        returnValue: _i7.Future<_i15.Uint8List?>.value(),
        returnValueForMissingStub: _i7.Future<_i15.Uint8List?>.value(),
      ) as _i7.Future<_i15.Uint8List?>);

  @override
  _i8.UploadTask putData(
    _i15.Uint8List? data, [
    _i9.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putData,
          [
            data,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putData,
            [
              data,
              metadata,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putData,
            [
              data,
              metadata,
            ],
          ),
        ),
      ) as _i8.UploadTask);

  @override
  _i8.UploadTask putBlob(
    dynamic blob, [
    _i9.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBlob,
          [
            blob,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putBlob,
            [
              blob,
              metadata,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putBlob,
            [
              blob,
              metadata,
            ],
          ),
        ),
      ) as _i8.UploadTask);

  @override
  _i8.UploadTask putFile(
    _i16.File? file, [
    _i9.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFile,
          [
            file,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putFile,
            [
              file,
              metadata,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putFile,
            [
              file,
              metadata,
            ],
          ),
        ),
      ) as _i8.UploadTask);

  @override
  _i8.UploadTask putString(
    String? data, {
    _i9.PutStringFormat? format = _i9.PutStringFormat.raw,
    _i9.SettableMetadata? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putString,
          [data],
          {
            #format: format,
            #metadata: metadata,
          },
        ),
        returnValue: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putString,
            [data],
            {
              #format: format,
              #metadata: metadata,
            },
          ),
        ),
        returnValueForMissingStub: _FakeUploadTask_25(
          this,
          Invocation.method(
            #putString,
            [data],
            {
              #format: format,
              #metadata: metadata,
            },
          ),
        ),
      ) as _i8.UploadTask);

  @override
  _i7.Future<_i9.FullMetadata> updateMetadata(_i9.SettableMetadata? metadata) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMetadata,
          [metadata],
        ),
        returnValue: _i7.Future<_i9.FullMetadata>.value(_FakeFullMetadata_23(
          this,
          Invocation.method(
            #updateMetadata,
            [metadata],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i9.FullMetadata>.value(_FakeFullMetadata_23(
          this,
          Invocation.method(
            #updateMetadata,
            [metadata],
          ),
        )),
      ) as _i7.Future<_i9.FullMetadata>);

  @override
  _i8.DownloadTask writeToFile(_i16.File? file) => (super.noSuchMethod(
        Invocation.method(
          #writeToFile,
          [file],
        ),
        returnValue: _FakeDownloadTask_26(
          this,
          Invocation.method(
            #writeToFile,
            [file],
          ),
        ),
        returnValueForMissingStub: _FakeDownloadTask_26(
          this,
          Invocation.method(
            #writeToFile,
            [file],
          ),
        ),
      ) as _i8.DownloadTask);
}

/// A class which mocks [AppSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppSettings extends _i1.Mock implements _i17.AppSettings {
  @override
  void changeThemeMode(_i18.ThemeMode? themeMode) => super.noSuchMethod(
        Invocation.method(
          #changeThemeMode,
          [themeMode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isDarkMode() => (super.noSuchMethod(
        Invocation.method(
          #isDarkMode,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [AuthenticationProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationProvider extends _i1.Mock
    implements _i19.AuthenticationProvider {
  @override
  _i7.Future<void> signInWithPhoneNumber(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [phoneNumber],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> verifyOtp(String? otp) => (super.noSuchMethod(
        Invocation.method(
          #verifyOtp,
          [otp],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> resendOtp(String? phoneNumber) => (super.noSuchMethod(
        Invocation.method(
          #resendOtp,
          [phoneNumber],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> saveDataToDatabase(
    String? name,
    String? photoUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDataToDatabase,
          [
            name,
            photoUrl,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> getCurrentId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentId,
          [],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i10.UserModel> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i7.Future<_i10.UserModel>.value(_FakeUserModel_27(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i10.UserModel>.value(_FakeUserModel_27(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i7.Future<_i10.UserModel>);

  @override
  _i7.Stream<_i10.UserModel> getUserById(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [uid],
        ),
        returnValue: _i7.Stream<_i10.UserModel>.empty(),
        returnValueForMissingStub: _i7.Stream<_i10.UserModel>.empty(),
      ) as _i7.Stream<_i10.UserModel>);

  @override
  _i7.Future<bool> isUserExist(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isUserExist,
          [uid],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> setUserLoggedIn(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #setUserLoggedIn,
          [uid],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #removeUser,
          [uid],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [SettingProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingProvider extends _i1.Mock implements _i19.SettingProvider {
  @override
  _i18.ThemeMode getLocalThemeMode() => (super.noSuchMethod(
        Invocation.method(
          #getLocalThemeMode,
          [],
        ),
        returnValue: _i18.ThemeMode.system,
        returnValueForMissingStub: _i18.ThemeMode.system,
      ) as _i18.ThemeMode);

  @override
  _i7.Future<void> changeThemeMode(_i18.ThemeMode? themeMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeThemeMode,
          [themeMode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [UserProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProvider extends _i1.Mock implements _i19.UserProvider {
  @override
  _i7.Future<String> getCurrentId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentId,
          [],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i10.UserModel> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i7.Future<_i10.UserModel>.value(_FakeUserModel_27(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i10.UserModel>.value(_FakeUserModel_27(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i7.Future<_i10.UserModel>);

  @override
  _i7.Stream<_i10.UserModel> getUserById(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [uid],
        ),
        returnValue: _i7.Stream<_i10.UserModel>.empty(),
        returnValueForMissingStub: _i7.Stream<_i10.UserModel>.empty(),
      ) as _i7.Stream<_i10.UserModel>);

  @override
  _i7.Future<bool> isUserExist(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isUserExist,
          [uid],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [StorageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageProvider extends _i1.Mock implements _i19.StorageProvider {
  @override
  _i7.Future<String> uploadProfilePic(
    _i20.XFile? file,
    dynamic Function(double)? onProgress,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePic,
          [
            file,
            onProgress,
          ],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #uploadProfilePic,
            [
              file,
              onProgress,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #uploadProfilePic,
            [
              file,
              onProgress,
            ],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> defaultPicUrl(String? imgNumber) => (super.noSuchMethod(
        Invocation.method(
          #defaultPicUrl,
          [imgNumber],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #defaultPicUrl,
            [imgNumber],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #defaultPicUrl,
            [imgNumber],
          ),
        )),
      ) as _i7.Future<String>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i12.AuthRepository {
  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> signInWithPhoneNumber(
          String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [phoneNumber],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [phoneNumber],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [phoneNumber],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> verifyOtp(String? otp) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOtp,
          [otp],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #verifyOtp,
            [otp],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #verifyOtp,
            [otp],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> resendOtp(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendOtp,
          [phoneNumber],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #resendOtp,
            [phoneNumber],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #resendOtp,
            [phoneNumber],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> saveDataToDatabase(
    String? name,
    String? photoUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDataToDatabase,
          [
            name,
            photoUrl,
          ],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #saveDataToDatabase,
            [
              name,
              photoUrl,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #saveDataToDatabase,
            [
              name,
              photoUrl,
            ],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> getCurrentId() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentId,
          [],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> getCachedLocalCurrentUid() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedLocalCurrentUid,
          [],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #getCachedLocalCurrentUid,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #getCachedLocalCurrentUid,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>> getCurrentUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue:
            _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>>.value(
                _FakeEither_28<_i17.Failure, _i10.UserModel>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>>.value(
                _FakeEither_28<_i17.Failure, _i10.UserModel>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>>);

  @override
  _i7.Stream<_i12.UserEntity> getUserById(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [uid],
        ),
        returnValue: _i7.Stream<_i12.UserEntity>.empty(),
        returnValueForMissingStub: _i7.Stream<_i12.UserEntity>.empty(),
      ) as _i7.Stream<_i12.UserEntity>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i12.UserRepository {
  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> getCurrentId() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentId,
          [],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #getCurrentId,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>> getCurrentUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue:
            _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>>.value(
                _FakeEither_28<_i17.Failure, _i10.UserModel>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>>.value(
                _FakeEither_28<_i17.Failure, _i10.UserModel>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, _i10.UserModel>>);

  @override
  _i7.Stream<_i12.UserEntity> getUserById(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [uid],
        ),
        returnValue: _i7.Stream<_i12.UserEntity>.empty(),
        returnValueForMissingStub: _i7.Stream<_i12.UserEntity>.empty(),
      ) as _i7.Stream<_i12.UserEntity>);
}

/// A class which mocks [SettingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingRepository extends _i1.Mock implements _i12.SettingRepository {
  @override
  _i18.ThemeMode getLocalThemeMode() => (super.noSuchMethod(
        Invocation.method(
          #getLocalThemeMode,
          [],
        ),
        returnValue: _i18.ThemeMode.system,
        returnValueForMissingStub: _i18.ThemeMode.system,
      ) as _i18.ThemeMode);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> changeThemeMode(
          _i18.ThemeMode? themeMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeThemeMode,
          [themeMode],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #changeThemeMode,
            [themeMode],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #changeThemeMode,
            [themeMode],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);
}

/// A class which mocks [StorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageRepository extends _i1.Mock implements _i12.StorageRepository {
  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> uploadProfilePic(
    _i20.XFile? file,
    dynamic Function(double)? onProgress,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePic,
          [
            file,
            onProgress,
          ],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePic,
            [
              file,
              onProgress,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePic,
            [
              file,
              onProgress,
            ],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);

  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> defaultPicUrl(
          String? imgNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #defaultPicUrl,
          [imgNumber],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #defaultPicUrl,
            [imgNumber],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #defaultPicUrl,
            [imgNumber],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);
}

/// A class which mocks [GetCachedUserUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCachedUserUsecase extends _i1.Mock
    implements _i12.GetCachedUserUsecase {
  @override
  _i12.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i12.AuthRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);
}

/// A class which mocks [GetCurrentIdUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentIdUsecase extends _i1.Mock
    implements _i12.GetCurrentIdUsecase {
  @override
  _i12.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_30(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_30(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i12.UserRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);
}

/// A class which mocks [GetCurrentUserUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentUserUsecase extends _i1.Mock
    implements _i12.GetCurrentUserUsecase {
  @override
  _i12.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_30(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_30(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i12.UserRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, _i12.UserEntity>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i7.Future<_i11.Either<_i17.Failure, _i12.UserEntity>>.value(
                _FakeEither_28<_i17.Failure, _i12.UserEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, _i12.UserEntity>>.value(
                _FakeEither_28<_i17.Failure, _i12.UserEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, _i12.UserEntity>>);
}

/// A class which mocks [GetUserByIdUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetUserByIdUsecase extends _i1.Mock
    implements _i12.GetUserByIdUsecase {
  @override
  _i12.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_30(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_30(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i12.UserRepository);

  @override
  _i7.Stream<_i12.UserEntity> call(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [uid],
        ),
        returnValue: _i7.Stream<_i12.UserEntity>.empty(),
        returnValueForMissingStub: _i7.Stream<_i12.UserEntity>.empty(),
      ) as _i7.Stream<_i12.UserEntity>);
}

/// A class which mocks [ResendOtpUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendOtpUsecase extends _i1.Mock implements _i12.ResendOtpUsecase {
  @override
  _i12.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i12.AuthRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> call(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [phoneNumber],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [phoneNumber],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [phoneNumber],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);
}

/// A class which mocks [SaveToDatabaseUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveToDatabaseUsecase extends _i1.Mock
    implements _i12.SaveToDatabaseUsecase {
  @override
  _i12.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i12.AuthRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> call(
    String? name,
    String? photoUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            name,
            photoUrl,
          ],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [
              name,
              photoUrl,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [
              name,
              photoUrl,
            ],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);
}

/// A class which mocks [SignInUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignInUsecase extends _i1.Mock implements _i12.SignInUsecase {
  @override
  _i12.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i12.AuthRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> call(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [phoneNumber],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [phoneNumber],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [phoneNumber],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);
}

/// A class which mocks [SignOutUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignOutUsecase extends _i1.Mock implements _i12.SignOutUsecase {
  @override
  _i12.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i12.AuthRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);
}

/// A class which mocks [VerifyOtpUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerifyOtpUsecase extends _i1.Mock implements _i12.VerifyOtpUsecase {
  @override
  _i12.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_29(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i12.AuthRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> call(String? otp) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [otp],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [otp],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [otp],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);
}

/// A class which mocks [AppSettingsUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppSettingsUsecase extends _i1.Mock
    implements _i12.AppSettingsUsecase {
  @override
  _i12.SettingRepository get settingRepository => (super.noSuchMethod(
        Invocation.getter(#settingRepository),
        returnValue: _FakeSettingRepository_31(
          this,
          Invocation.getter(#settingRepository),
        ),
        returnValueForMissingStub: _FakeSettingRepository_31(
          this,
          Invocation.getter(#settingRepository),
        ),
      ) as _i12.SettingRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, void>> call(_i18.ThemeMode? themeMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [themeMode],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, void>>.value(
            _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [themeMode],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, void>>.value(
                _FakeEither_28<_i17.Failure, void>(
          this,
          Invocation.method(
            #call,
            [themeMode],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, void>>);
}

/// A class which mocks [GetLocalThemeModeUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetLocalThemeModeUsecase extends _i1.Mock
    implements _i12.GetLocalThemeModeUsecase {
  @override
  _i12.SettingRepository get settingRepository => (super.noSuchMethod(
        Invocation.getter(#settingRepository),
        returnValue: _FakeSettingRepository_31(
          this,
          Invocation.getter(#settingRepository),
        ),
        returnValueForMissingStub: _FakeSettingRepository_31(
          this,
          Invocation.getter(#settingRepository),
        ),
      ) as _i12.SettingRepository);

  @override
  _i18.ThemeMode call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i18.ThemeMode.system,
        returnValueForMissingStub: _i18.ThemeMode.system,
      ) as _i18.ThemeMode);
}

/// A class which mocks [GetDefaultProfilePicUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDefaultProfilePicUsecase extends _i1.Mock
    implements _i12.GetDefaultProfilePicUsecase {
  @override
  _i12.StorageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeStorageRepository_32(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeStorageRepository_32(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i12.StorageRepository);

  @override
  _i7.Future<_i11.Either<_i17.Failure, String>> call(String? imgNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [imgNumber],
        ),
        returnValue: _i7.Future<_i11.Either<_i17.Failure, String>>.value(
            _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #call,
            [imgNumber],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i11.Either<_i17.Failure, String>>.value(
                _FakeEither_28<_i17.Failure, String>(
          this,
          Invocation.method(
            #call,
            [imgNumber],
          ),
        )),
      ) as _i7.Future<_i11.Either<_i17.Failure, String>>);
}

/// A class which mocks [UserEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserEntity extends _i1.Mock implements _i12.UserEntity {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get phoneNumber => (super.noSuchMethod(
        Invocation.getter(#phoneNumber),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#phoneNumber),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#phoneNumber),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get profilePic => (super.noSuchMethod(
        Invocation.getter(#profilePic),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#profilePic),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#profilePic),
        ),
      ) as String);

  @override
  List<String> get groupId => (super.noSuchMethod(
        Invocation.getter(#groupId),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<String> get friendsId => (super.noSuchMethod(
        Invocation.getter(#friendsId),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);
}
